name: Rust

on:
  push:
  pull_request:
  schedule:
     - cron: '0 */6 * * *'

env:
  CARGO_TERM_COLOR: always

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build debug version
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Check cargo fmt
      run: cargo fmt --check

    - name: Clippy stop at any warning
      run: cargo clippy -- --deny warnings


    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Compile binary
      run: |
        cargo build --release
        mkdir _site
        mv target/release/news-collector _site/

    - name: Generate pages
      env:
        RUST_LOG: debug
      run: |
        ./_site/news-collector --download --web --config dev.yaml
        mv _site/index.html _site/dev.html
        echo '<h1>News Collector</h1> <a href="/dev">dev</a> <a href="/news-collector">download</a>   <a href="https://github.com/szabgab/news-collector.rs/">source</a>' > _site/index.html

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

